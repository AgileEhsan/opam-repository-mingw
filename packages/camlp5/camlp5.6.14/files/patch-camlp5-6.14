--- ./configure
+++ ./configure
@@ -103,6 +103,8 @@
 
 # Sanity checks
 
+if test "$win32" = "false"; then
+
 case "$prefix" in
   /*) ;;
   "") ;;
@@ -129,6 +131,8 @@
    *) ;;
 esac
 
+fi
+
 # Check Ocaml
 
 ocamlc=${ocamln}c
--- ./main/main.ml
+++ ./main/main.ml
@@ -167,6 +167,16 @@
 ;
 
 value print_version () = do {
+  let set_output_binary () =
+    match Sys.os_type with
+      [ "Win32" ->
+       do {
+          try set_binary_mode_out stdout True with _ -> ();
+          try set_binary_mode_out stderr True with _ -> ();
+        }
+      | _ -> () ]
+  in
+  set_output_binary ();
   eprintf "Camlp5 version %s (ocaml %s)\n" Pcaml.version
     Pconfig.ocaml_version;
   flush stderr;
--- ./odyl/odyl.ml
+++ ./odyl/odyl.ml
@@ -13,10 +13,36 @@
     }
     else if s = "-nolib" then do { Odyl_main.nolib.val := True; incr i }
     else if s = "-where" then do {
-      print_string Odyl_config.standard_library;
-      print_newline ();
-      flush stdout;
-      exit 0
+      let set_output_binary () =
+        match Sys.os_type with
+          [ "Win32" ->
+            do {
+              try set_binary_mode_out stdout True with _ -> ();
+                try set_binary_mode_out stderr True with _ -> ();
+            }
+          | _ -> () ]
+      in
+      let slashify p =
+        match Sys.os_type with
+          [ "Win32" ->
+          let len = String.length p in
+          let b = Bytes.create len in
+          do {
+          for i = 0 to len - 1 do {
+            Bytes.set b i (match p.[i] with
+            [ '\\' ->  '/'
+            | x -> x ])
+          };
+          Bytes.to_string b}
+        | _ -> p ]
+      in
+      do {
+        set_output_binary ();
+        print_string (slashify Odyl_config.standard_library);
+        print_newline ();
+        flush stdout;
+        exit 0
+      }
     }
     else if s = "--" then do { incr i; stop.val := True; () }
     else if String.length s > 0 && s.[0] == '-' then stop.val := True

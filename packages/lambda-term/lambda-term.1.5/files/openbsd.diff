--- ./_oasis
+++ ./_oasis
@@ -64,6 +64,11 @@
     lTerm_term_stubs.c,
     lTerm_unix_stubs.c,
     lTerm_windows_stubs.c
+  CCOpt:
+    -I/usr/local/include
+  CCLib:
+    -L/usr/local/lib
+    -lcharset
 
 # +-------------------------------------------------------------------+
 # | Examples                                                          |
--- ./_tags
+++ ./_tags
@@ -19,6 +19,15 @@
 "_darcs": not_hygienic
 # Library lambda-term
 "src/lambda-term.cmxs": use_lambda-term
+<src/*.ml{,i}>: oasis_library_lambda_term_ccopt
+"src/lTerm_term_stubs.c": oasis_library_lambda_term_ccopt
+"src/lTerm_unix_stubs.c": oasis_library_lambda_term_ccopt
+"src/lTerm_windows_stubs.c": oasis_library_lambda_term_ccopt
+<src/lambda-term.{cma,cmxa}>: oasis_library_lambda_term_cclib
+"src/liblambda-term_stubs.lib": oasis_library_lambda_term_cclib
+"src/dlllambda-term_stubs.dll": oasis_library_lambda_term_cclib
+"src/liblambda-term_stubs.a": oasis_library_lambda_term_cclib
+"src/dlllambda-term_stubs.so": oasis_library_lambda_term_cclib
 <src/lambda-term.{cma,cmxa}>: use_liblambda-term_stubs
 <src/*.ml{,i}>: pkg_lwt
 <src/*.ml{,i}>: pkg_lwt.unix
--- ./myocamlbuild.ml
+++ ./myocamlbuild.ml
@@ -488,7 +488,25 @@
   {
      MyOCamlbuildBase.lib_ocaml = [("lambda-term", ["src"])];
      lib_c = [("lambda-term", "src", [])];
-     flags = [];
+     flags =
+       [
+          (["oasis_library_lambda_term_ccopt"; "compile"],
+            [(OASISExpr.EBool true, S [A "-ccopt"; A "-I/usr/local/include"])
+            ]);
+          (["oasis_library_lambda_term_cclib"; "link"],
+            [
+               (OASISExpr.EBool true,
+                 S
+                   [
+                      A "-cclib";
+                      A "-L/usr/local/lib";
+                      A "-cclib";
+                      A "-lcharset"
+                   ])
+            ]);
+          (["oasis_library_lambda_term_cclib"; "ocamlmklib"; "c"],
+            [(OASISExpr.EBool true, S [A "-L/usr/local/lib"; A "-lcharset"])])
+       ];
      includes =
        [("tools", ["src"]); ("tests", ["src"]); ("examples", ["src"])];
      }
--- ./setup.ml
+++ ./setup.ml
@@ -5964,8 +5964,13 @@
                            "lTerm_windows_stubs.c"
                         ];
                       bs_data_files = [];
-                      bs_ccopt = [(OASISExpr.EBool true, [])];
-                      bs_cclib = [(OASISExpr.EBool true, [])];
+                      bs_ccopt =
+                        [(OASISExpr.EBool true, ["-I/usr/local/include"])];
+                      bs_cclib =
+                        [
+                           (OASISExpr.EBool true,
+                             ["-L/usr/local/lib"; "-lcharset"])
+                        ];
                       bs_dlllib = [(OASISExpr.EBool true, [])];
                       bs_dllpath = [(OASISExpr.EBool true, [])];
                       bs_byteopt = [(OASISExpr.EBool true, [])];
--- ./src/lTerm_unix_stubs.c
+++ ./src/lTerm_unix_stubs.c
@@ -29,7 +29,7 @@
 
 #include <signal.h>
 #include <locale.h>
-#include <langinfo.h>
+#include <localcharset.h>
 
 CAMLprim value lt_unix_get_sigwinch()
 {
@@ -45,9 +45,9 @@
 CAMLprim value lt_unix_get_system_encoding()
 {
   /* Set the locale according to environment variables: */
-  char *locale = setlocale(LC_CTYPE, "");
+  const char *locale = setlocale(LC_CTYPE, "");
   /* Get the codeset used by current locale: */
-  char *codeset = nl_langinfo(CODESET);
+  const char *codeset = locale_charset();
   /* Reset the locale: */
   setlocale(LC_CTYPE, locale);
   /* If the encoding cannot be determined, just use ascii: */

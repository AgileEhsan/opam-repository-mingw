--- ./bootstrap.ml
+++ ./bootstrap.ml
@@ -166,6 +166,7 @@
     print_endline cmd;
     Unix.open_process_in cmd
   in
+  set_binary_mode_in ic false;
   let rec loop acc =
     match input_line ic with
     | exception End_of_file ->
@@ -222,7 +223,7 @@
   !newlines
 
 let read_file fn =
-  let ic = open_in fn in
+  let ic = open_in_bin fn in
   let data = really_input_string ic (in_channel_length ic) in
   close_in ic;
   data
@@ -230,7 +231,7 @@
 let generated_file = "boot.ml"
 
 let generate_file_with_all_the_sources () =
-  let oc = open_out generated_file in
+  let oc = open_out_bin generated_file in
   let pos_in_generated_file = ref 1 in
   let pr fmt =
     ksprintf (fun s ->
--- ./src/context.ml
+++ ./src/context.ml
@@ -263,7 +263,7 @@
     ; toplevel_path = Option.map (get_env env "OCAML_TOPLEVEL_PATH") ~f:Path.absolute
 
     ; ocaml_bin  = dir
-    ; ocaml      = Path.relative dir "ocaml"
+    ; ocaml      = Path.relative dir (if Sys.win32 then "ocaml.exe" else "ocaml")
     ; ocamlc
     ; ocamlopt   = best_prog "ocamlopt"
     ; ocamllex   = get_prog  "ocamllex"
--- ./src/future.ml
+++ ./src/future.ml
@@ -214,8 +214,9 @@
     fn
 
   let destroy fn =
-    Sys.remove fn;
-    tmp_files := String_set.remove fn !tmp_files
+    match Sys.remove fn with
+    | exception Sys_error _ -> () (* good luck at_exit *)
+    | _ -> tmp_files := String_set.remove fn !tmp_files
 end
 
 let run_capture_gen ?dir ?env fail_mode prog args ~f =
@@ -414,12 +415,12 @@
             (Ansi_color.strip_colors_for_stderr command_line);
         let argv = Array.of_list (job.prog :: job.args) in
         let output_filename = Temp.create "jbuilder" ".output" in
-        let output_fd = Unix.openfile output_filename [O_WRONLY] 0 in
+        let output_fd = Unix.openfile output_filename [O_WRONLY; O_SHARE_DELETE] 0 in
         let stdout, close_stdout =
           match job.stdout_to with
           | Terminal -> (output_fd, None)
           | File fn ->
-            let fd = Unix.openfile fn [O_WRONLY; O_CREAT; O_TRUNC] 0o666 in
+            let fd = Unix.openfile fn [O_WRONLY; O_CREAT; O_TRUNC ; O_SHARE_DELETE] 0o666 in
             (fd, Some (Fd fd))
           | Opened_file { desc; tail; _ } ->
             let fd =
--- ./src/import.ml
+++ ./src/import.ml
@@ -347,6 +347,16 @@
         };
       f lb)
 
+let input_line =
+  if not Sys.win32 then input_line else
+  fun ic ->
+    let s = input_line ic in
+    let len_m1 = String.length s - 1 in
+    if len_m1 < 0 || String.get s len_m1 <> '\r' then
+      s
+    else
+      String.sub s ~pos:0 ~len:len_m1
+
 let input_lines =
   let rec loop ic acc =
     match input_line ic with

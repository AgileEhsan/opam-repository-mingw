--- ./CHANGES
+++ ./CHANGES
@@ -1,3 +1,7 @@
+1.4.1 (2016-02-08)
+* Use a poor-man `realpath` instead of relying on C bindings which are not
+  available under Cygwin
+
 1.4.0 (2015-03-09):
 * Add an explicit `connect` function to the signature of generated code. (#13)
 * Use centralised Travis CI scripts.
--- ./lib/custom_unix_stubs.c
+++ ./lib/custom_unix_stubs.c
@@ -1,38 +0,0 @@
-/*
- * Copyright (c) 2009 Anil Madhavapeddy <anil@recoil.org>
- *
- * Permission to use, copy, modify, and distribute this software for any
- * purpose with or without fee is hereby granted, provided that the above
- * copyright notice and this permission notice appear in all copies.
- *
- * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
- * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
- * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
- * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
- * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
- * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
- * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
- */
-
-#include <sys/param.h>
-#include <stdlib.h>
-#include <errno.h>
-
-#include <caml/mlvalues.h>
-#include <caml/memory.h>
-#include <caml/fail.h>
-#include <caml/alloc.h>
-#include <caml/custom.h>
-#include <caml/signals.h>
-#include <caml/unixsupport.h>
-
-CAMLprim value unix_realpath(value path)
-{
-  char buffer[PATH_MAX];
-  char *r;
-  r = realpath(String_val(path), buffer);
-  if (r == NULL) uerror("realpath", path);
-  return copy_string(buffer);
-}
-
-
--- ./lib/libmir-crunch_stubs.clib
+++ ./lib/libmir-crunch_stubs.clib
@@ -1,4 +0,0 @@
-# OASIS_START
-# DO NOT EDIT (digest: 3c1cffd77037b56300e3a120e3a09157)
-custom_unix_stubs.o
-# OASIS_STOP
--- ./lib/libocaml-crunch_stubs.clib
+++ ./lib/libocaml-crunch_stubs.clib
@@ -1,4 +0,0 @@
-# OASIS_START
-# DO NOT EDIT (digest: 3c1cffd77037b56300e3a120e3a09157)
-custom_unix_stubs.o
-# OASIS_STOP
--- ./lib/main.ml
+++ ./lib/main.ml
@@ -17,8 +17,24 @@
 
 open Cmdliner
 
-(* wrapper for realpath(2) *)
-external realpath : string -> string = "unix_realpath"
+(* poor-man reimplementation of realpath, from OPAM's system library *)
+let realpath p =
+  let getchdir s =
+    let p = Sys.getcwd () in
+    Sys.chdir s;
+    p
+  in
+  let normalize s = getchdir (getchdir s) in
+  if Filename.is_relative p then
+    match (try Some (Sys.is_directory p) with Sys_error _ -> None) with
+    | None -> p
+    | Some true -> normalize p
+    | Some false ->
+      let dir = normalize (Filename.dirname p) in
+      match Filename.basename p with
+      | "."  -> dir
+      | base -> Filename.concat dir base
+  else p
 
 let binary = Filename.basename Sys.argv.(0)
 
--- ./lib/META
+++ ./lib/META
@@ -1,6 +1,6 @@
 # OASIS_START
-# DO NOT EDIT (digest: 95391c988fec8557bfb084ec87d91e02)
-version = "1.4.0"
+# DO NOT EDIT (digest: 5bfd91422d4b4fb595339ecf0d748fd4)
+version = "1.4.1"
 description = "Compile static files into a static filesystem"
 requires = "unix"
 archive(byte) = "crunch.cma"
--- ./myocamlbuild.ml
+++ ./myocamlbuild.ml
@@ -1,5 +1,5 @@
 (* OASIS_START *)
-(* DO NOT EDIT (digest: bd93557132525bd87db60e3e53ddeb79) *)
+(* DO NOT EDIT (digest: 5947e40e0e76a373bd973fef341ab9b0) *)
 module OASISGettext = struct
 (* # 22 "src/oasis/OASISGettext.ml" *)
 
@@ -608,7 +608,7 @@ open Ocamlbuild_plugin;;
 let package_default =
   {
      MyOCamlbuildBase.lib_ocaml = [("crunch", ["lib"], [])];
-     lib_c = [("ocaml-crunch", "lib", [])];
+     lib_c = [];
      flags = [];
      includes = []
   }
--- ./_oasis
+++ ./_oasis
@@ -1,6 +1,6 @@
 OASISFormat: 0.4
 Name:        crunch
-Version:     1.4.0
+Version:     1.4.1
 Synopsis:    Compile static files into a static filesystem
 Authors:     Anil Madhavapeddy, Thomas Gazagnaire
 License:     ISC
@@ -19,7 +19,6 @@ Executable "ocaml-crunch"
   CompiledObject:     best
   Path:               lib
   Custom:             true
-  CSources:           custom_unix_stubs.c
   Install:            true
   BuildDepends:       crunch,unix,cmdliner
 
--- ./opam
+++ ./opam
@@ -0,0 +1,23 @@
+opam-version: "1.2"
+maintainer:   "anil@recoil.org"
+authors:      ["Anil Madhavapeddy" "Thomas Gazagnaire"]
+homepage:     "https://github.com/mirage/ocaml-crunch"
+bug-reports:  "https://github.com/mirage/ocaml-crunch/issues"
+license:      "ISC"
+dev-repo:     "https://github.com/mirage/ocaml-crunch.git"
+tags:         ["org:mirage" "org:xapi-project"]
+
+build: [
+  ["ocaml" "setup.ml" "-configure" "--prefix" prefix]
+  ["ocaml" "setup.ml" "-build"]
+]
+install: ["ocaml" "setup.ml" "-install"]
+remove: [
+  ["rm" "-f" "%{bin}%/ocaml-crunch"]
+  ["ocamlfind" "remove" "crunch"]
+]
+depends: [
+  "ocamlfind"
+  "cmdliner"
+  "ocamlbuild" {build}
+]
--- ./setup.ml
+++ ./setup.ml
@@ -1,7 +1,7 @@
 (* setup.ml generated for the first time by OASIS v0.3.0 *)
 
 (* OASIS_START *)
-(* DO NOT EDIT (digest: 55b279a61f8effa1deb065eb9e226e76) *)
+(* DO NOT EDIT (digest: 38a90f61606a4ba0b2b8b33a9e9b5edd) *)
 (*
    Regenerated by OASIS v0.4.5
    Visit http://oasis.forge.ocamlcore.org for more information and
@@ -6851,7 +6851,7 @@ let setup_t =
           alpha_features = [];
           beta_features = [];
           name = "crunch";
-          version = "1.4.0";
+          version = "1.4.1";
           license =
             OASISLicense.DEP5License
               (OASISLicense.DEP5Unit
@@ -6952,7 +6952,7 @@ let setup_t =
                            FindlibPackage ("cmdliner", None)
                         ];
                       bs_build_tools = [ExternalTool "ocamlbuild"];
-                      bs_c_sources = ["custom_unix_stubs.c"];
+                      bs_c_sources = [];
                       bs_data_files = [];
                       bs_ccopt = [(OASISExpr.EBool true, [])];
                       bs_cclib = [(OASISExpr.EBool true, [])];
@@ -6997,7 +6997,7 @@ let setup_t =
        };
      oasis_fn = Some "_oasis";
      oasis_version = "0.4.5";
-     oasis_digest = Some "\148Â²DÈ¸ä±ª%ÁL¤ÿ¢n";
+     oasis_digest = Some "¹\\Ñô\140>õ&Û3Ø°\012\146\148(";
      oasis_exec = None;
      oasis_setup_args = [];
      setup_update = false
--- ./_tags
+++ ./_tags
@@ -1,5 +1,5 @@
 # OASIS_START
-# DO NOT EDIT (digest: 551bbb004e68ab6fb7dc279093de0e6e)
+# DO NOT EDIT (digest: 58af75697222d3710022d0f9de3ce0bb)
 # Ignore VCS directories, you can use the same kind of rule outside
 # OASIS_START/STOP if you want to exclude directories that contains
 # useless stuff for the build process
@@ -17,15 +17,11 @@ true: annot, bin_annot
 # Library crunch
 "lib/crunch.cmxs": use_crunch
 # Executable ocaml-crunch
-<lib/main.{native,byte}>: use_libocaml-crunch_stubs
 <lib/main.{native,byte}>: pkg_cmdliner
 <lib/main.{native,byte}>: pkg_unix
 <lib/main.{native,byte}>: use_crunch
 <lib/*.ml{,i,y}>: pkg_cmdliner
 <lib/*.ml{,i,y}>: pkg_unix
 <lib/*.ml{,i,y}>: use_crunch
-"lib/custom_unix_stubs.c": pkg_cmdliner
-"lib/custom_unix_stubs.c": pkg_unix
-"lib/custom_unix_stubs.c": use_crunch
 <lib/main.{native,byte}>: custom
 # OASIS_STOP
